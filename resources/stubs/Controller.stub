<?php

namespace App\Http\Controllers;

use App\Http\Controllers\Controller;
use App\Http\Requests\{{modelName}}StoreRequest;
use App\Http\Requests\{{modelName}}UpdateRequest;
use App\{{modelName}};
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Gate;
use RealRashid\SweetAlert\Facades\Alert;
use Throwable;

class {{modelName}}Controller extends Controller
{
    public function index()
    {
        abort_unless(Gate::allows('{{modelNameSingularLowerCase}}-access'), 403);

        ${{modelNamePluralLowerCase}} = {{modelName}}::all();

        return view('admin.{{modelNameSingularLowerCase}}.index', compact('{{modelNamePluralLowerCase}}'));
    }


    public function create()
    {
        abort_unless(Gate::allows('{{modelNameSingularLowerCase}}-create'), 403);

        return view('admin.{{modelNameSingularLowerCase}}.create');
    }


    public function store({{modelName}}StoreRequest $request)
    {
        abort_unless(Gate::allows('{{modelNameSingularLowerCase}}-create'), 403);

        try {
            ${{modelNameSingularLowerCase}} = {{modelName}}::create($request->all());

            Alert::toast(
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.store_success'),
                'success'
            )->timerProgressBar();
        } catch (Throwable $t) {
            Alert::error(
                __('gennix.opps'),
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.store_error')
            )->autoClose(2000)->timerProgressBar();

            Auth::user()->saveActivity(
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.store_error') . ' {{modelName}}: ' . $request->title,
                [
                    'message' => $t->getMessage(),
                    'code_error' => $t->getCode(),
                    'line' => $t->getLine(),
                    'file' => $t->getFile(),
                ],
                'error'
            );
        }

        return redirect()->route('{{modelNameSingularLowerCase}}.index');
    }


    public function show({{modelName}} ${{modelNameSingularLowerCase}})
    {
        abort_unless(Gate::allows('{{modelNameSingularLowerCase}}-show'), 403);

        return view('admin.{{modelNameSingularLowerCase}}.show', compact('{{modelNameSingularLowerCase}}'));
    }


    public function edit({{modelName}} ${{modelNameSingularLowerCase}})
    {
        abort_unless(Gate::allows('{{modelNameSingularLowerCase}}-edit'), 403);

        return view('admin.{{modelNameSingularLowerCase}}.edit', compact('{{modelNameSingularLowerCase}}'));
    }


    public function update({{modelName}}UpdateRequest $request, {{modelName}} ${{modelNameSingularLowerCase}})
    {
        abort_unless(Gate::allows('{{modelNameSingularLowerCase}}-edit'), 403);

        try {
            ${{modelNameSingularLowerCase}}->update($request->all());

            Alert::toast(
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.update_success'),
                'success'
            )->timerProgressBar();
        } catch (Throwable $t) {
            Alert::error(
                __('gennix.opps'),
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.update_error')
            )->autoClose(2000)->timerProgressBar();

            Auth::user()->saveActivity(
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.update_error') . ' ID ' . $request->id,
                [
                    'message' => $t->getMessage(),
                    'code_error' => $t->getCode(),
                    'line' => $t->getLine(),
                    'file' => $t->getFile(),
                ],
                'error'
            );
        }

        return redirect()->route('{{modelNameSingularLowerCase}}.index');
    }


    public function destroy({{modelName}} ${{modelNameSingularLowerCase}})
    {
        abort_unless(Gate::allows('{{modelNameSingularLowerCase}}-delete'), 403);

        try {
            ${{modelNameSingularLowerCase}}->delete();

            Alert::toast(
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.destroy_success'),
                'success'
            )->timerProgressBar();
        } catch (Throwable $t) {
            Alert::error(
                __('gennix.opps'),
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.destroy_error')
            )->autoClose(2000)->timerProgressBar();

            Auth::user()->saveActivity(
                __('gennix.model_{{modelNameSingularLowerCase}}.alert_messages.destroy_error') . ' ID ' . $id,
                [
                    'message' => $t->getMessage(),
                    'code_error' => $t->getCode(),
                    'line' => $t->getLine(),
                    'file' => $t->getFile(),
                ],
                'error'
            );
        }
    }
}
